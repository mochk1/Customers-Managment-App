[{"D:\\electron\\my-app\\Client\\src\\index.js":"1","D:\\electron\\my-app\\Client\\src\\serviceWorker.js":"2","D:\\electron\\my-app\\Client\\src\\App.js":"3","D:\\electron\\my-app\\Client\\src\\Main.js":"4","D:\\electron\\my-app\\Client\\src\\components\\context.js":"5","D:\\electron\\my-app\\Client\\src\\LoginPage.js":"6","D:\\electron\\my-app\\Client\\src\\components\\Menu.js":"7","D:\\electron\\my-app\\Client\\src\\components\\Customers\\Customers.js":"8","D:\\electron\\my-app\\Client\\src\\components\\Customers\\CustomerPage.js":"9","D:\\electron\\my-app\\Client\\src\\components\\Customers\\AddCustomer.js":"10","D:\\electron\\my-app\\Client\\src\\components\\Customers\\AddProject.js":"11","D:\\electron\\my-app\\Client\\src\\components\\Settings\\Settings.js":"12","D:\\electron\\my-app\\Client\\src\\components\\Dashboard\\Dashboard.js":"13","D:\\electron\\my-app\\Client\\src\\components\\Customers\\CustomerCard.js":"14","D:\\electron\\my-app\\Client\\src\\components\\Customers\\SearchBar.js":"15","D:\\electron\\my-app\\Client\\src\\components\\Customers\\ProjectCard.js":"16","D:\\electron\\my-app\\Client\\src\\components\\Customers\\CustomerPageTop.js":"17","D:\\electron\\my-app\\Client\\src\\components\\Dashboard\\Finance.js":"18","D:\\electron\\my-app\\Client\\src\\components\\Dashboard\\ChartsData.js":"19","D:\\electron\\my-app\\Client\\src\\components\\Styles\\Spinner.js":"20","D:\\electron\\my-app\\Client\\src\\components\\Styles\\Toaster\\ToasterComponent.js":"21","D:\\electron\\my-app\\Client\\src\\components\\Dashboard\\InfoCard.js":"22","D:\\electron\\my-app\\client\\src\\index.js":"23","D:\\electron\\my-app\\client\\src\\App.js":"24","D:\\electron\\my-app\\client\\src\\serviceWorker.js":"25","D:\\electron\\my-app\\client\\src\\components\\context.js":"26","D:\\electron\\my-app\\client\\src\\Main.js":"27","D:\\electron\\my-app\\client\\src\\LoginPage.js":"28","D:\\electron\\my-app\\client\\src\\components\\Menu.js":"29","D:\\electron\\my-app\\client\\src\\components\\Customers\\Customers.js":"30","D:\\electron\\my-app\\client\\src\\components\\Customers\\CustomerPage.js":"31","D:\\electron\\my-app\\client\\src\\components\\Customers\\AddProject.js":"32","D:\\electron\\my-app\\client\\src\\components\\Customers\\AddCustomer.js":"33","D:\\electron\\my-app\\client\\src\\components\\Settings\\Settings.js":"34","D:\\electron\\my-app\\client\\src\\components\\Dashboard\\Dashboard.js":"35","D:\\electron\\my-app\\client\\src\\components\\Customers\\CustomerCard.js":"36","D:\\electron\\my-app\\client\\src\\components\\Customers\\SearchBar.js":"37","D:\\electron\\my-app\\client\\src\\components\\Customers\\CustomerPageTop.js":"38","D:\\electron\\my-app\\client\\src\\components\\Customers\\ProjectCard.js":"39","D:\\electron\\my-app\\client\\src\\components\\Dashboard\\Finance.js":"40","D:\\electron\\my-app\\client\\src\\components\\Dashboard\\ChartsData.js":"41","D:\\electron\\my-app\\client\\src\\components\\Styles\\Spinner.js":"42","D:\\electron\\my-app\\client\\src\\components\\Styles\\Toaster\\ToasterComponent.js":"43","D:\\electron\\my-app\\client\\src\\components\\Dashboard\\InfoCard.js":"44","D:\\electron\\my-app\\client\\src\\ProtectedRoute.js":"45","D:\\electron\\my-app\\client\\src\\components\\Auth.js":"46","D:\\electron\\my-app\\client\\src\\components\\Notes\\Notes.js":"47","D:\\electron\\my-app\\client\\src\\components\\Notes\\NoteItem.js":"48"},{"size":505,"mtime":1620216106385,"results":"49","hashOfConfig":"50"},{"size":5086,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":282,"mtime":1620163830580,"results":"52","hashOfConfig":"50"},{"size":480,"mtime":1620163657242,"results":"53","hashOfConfig":"50"},{"size":913,"mtime":1620162824752,"results":"54","hashOfConfig":"50"},{"size":1213,"mtime":1620163139078,"results":"55","hashOfConfig":"50"},{"size":3675,"mtime":1620166261117,"results":"56","hashOfConfig":"50"},{"size":1514,"mtime":1620163645031,"results":"57","hashOfConfig":"50"},{"size":1851,"mtime":1620118044988,"results":"58","hashOfConfig":"50"},{"size":2525,"mtime":1619301855623,"results":"59","hashOfConfig":"50"},{"size":3312,"mtime":1617485708361,"results":"60","hashOfConfig":"50"},{"size":737,"mtime":1619644687114,"results":"61","hashOfConfig":"50"},{"size":1208,"mtime":1619644316983,"results":"62","hashOfConfig":"50"},{"size":1387,"mtime":1619905892766,"results":"63","hashOfConfig":"50"},{"size":924,"mtime":1617465224124,"results":"64","hashOfConfig":"50"},{"size":2645,"mtime":1620164566222,"results":"65","hashOfConfig":"50"},{"size":2608,"mtime":1619289014428,"results":"66","hashOfConfig":"50"},{"size":1187,"mtime":1617485223106,"results":"67","hashOfConfig":"50"},{"size":997,"mtime":1617461582764,"results":"68","hashOfConfig":"50"},{"size":265,"mtime":1617462704828,"results":"69","hashOfConfig":"50"},{"size":443,"mtime":1600901369636,"results":"70","hashOfConfig":"50"},{"size":442,"mtime":1617461582647,"results":"71","hashOfConfig":"50"},{"size":505,"mtime":1621500476906,"results":"72","hashOfConfig":"73"},{"size":356,"mtime":1621501388738,"results":"74","hashOfConfig":"73"},{"size":5086,"mtime":499162500000,"results":"75","hashOfConfig":"73"},{"size":1025,"mtime":1621388521815,"results":"76","hashOfConfig":"73"},{"size":628,"mtime":1621779389623,"results":"77","hashOfConfig":"73"},{"size":3044,"mtime":1621504038832,"results":"78","hashOfConfig":"73"},{"size":4815,"mtime":1621790158070,"results":"79","hashOfConfig":"73"},{"size":1466,"mtime":1621986325041,"results":"80","hashOfConfig":"73"},{"size":1795,"mtime":1621778846634,"results":"81","hashOfConfig":"73"},{"size":2280,"mtime":1621465771167,"results":"82","hashOfConfig":"73"},{"size":2362,"mtime":1621468214661,"results":"83","hashOfConfig":"73"},{"size":728,"mtime":1621986528971,"results":"84","hashOfConfig":"73"},{"size":1218,"mtime":1621986425290,"results":"85","hashOfConfig":"73"},{"size":1395,"mtime":1621778599938,"results":"86","hashOfConfig":"73"},{"size":924,"mtime":1617465224124,"results":"87","hashOfConfig":"73"},{"size":2948,"mtime":1621551325668,"results":"88","hashOfConfig":"73"},{"size":2797,"mtime":1621697292159,"results":"89","hashOfConfig":"73"},{"size":1218,"mtime":1621534022748,"results":"90","hashOfConfig":"73"},{"size":997,"mtime":1617461582764,"results":"91","hashOfConfig":"73"},{"size":208,"mtime":1621379958257,"results":"92","hashOfConfig":"73"},{"size":434,"mtime":1621467723812,"results":"93","hashOfConfig":"73"},{"size":468,"mtime":1621534154852,"results":"94","hashOfConfig":"73"},{"size":817,"mtime":1621254962126,"results":"95","hashOfConfig":"73"},{"size":579,"mtime":1621388106051,"results":"96","hashOfConfig":"73"},{"size":3930,"mtime":1622056630859,"results":"97","hashOfConfig":"73"},{"size":1091,"mtime":1621972269043,"results":"98","hashOfConfig":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"1lgp339",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"101"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"101"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"101"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"101"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"101"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"j2sprx",{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"159"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"159"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"159"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"159"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"159"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"159"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"159"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"159"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"159"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"159"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"159"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"159"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"159"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"159"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"159"},"D:\\electron\\my-app\\Client\\src\\index.js",[],["226","227"],"D:\\electron\\my-app\\Client\\src\\serviceWorker.js",[],"D:\\electron\\my-app\\Client\\src\\App.js",["228"],"import React, {useState} from 'react'\nimport './App.css'; \nimport {DataProvider} from './components/context'\nimport Main from './Main'\n\n\n const App = () => {\n\n\n\n\n    return (\n        <DataProvider>\n         \n        <Main/>\n        </DataProvider>\n    );\n  \n}\n\n\nexport default App;\n","D:\\electron\\my-app\\Client\\src\\Main.js",[],"D:\\electron\\my-app\\Client\\src\\components\\context.js",[],"D:\\electron\\my-app\\Client\\src\\LoginPage.js",["229"],"import React, {useContext} from 'react'\r\nimport './LoginPage.css'\r\nimport { DataContext } from './components/context'\r\n\r\nconst LoginPage = () => {\r\n\r\n\r\nconst [state,setState] = useContext(DataContext); \r\nconst {isLoggedin} = state; \r\n\r\n\r\nconst setLogin = () => {\r\n\r\n    setState((prevState) => ({...prevState, isLoggedin: true}) );\r\n\r\n\r\n}\r\n\r\nreturn (\r\n\r\n<>\r\n<div className='flex flex-col h-screen bg-blue-100  '>\r\n\r\n<div className=' my-32'>\r\n<h1 className='text-center text-blue-900 text-xl'>M-App Login</h1>\r\n\r\n\r\n\r\n<div className='flex flex-col mx-auto my-auto max-w-sm mt-10 ' dir='rtl'>\r\n    <input className='mx-10 p-1 rounded border' name=\"descreption\"  placeholder=\"שם משתמש\" type=\"text\" ></input>\r\n    <input className='mx-10 p-1 mt-3 rounded border'  name=\"amount\" placeholder=\"סיסמא\" type=\"password\" ></input>\r\n    <button onClick={setLogin} className='mx-10 bg-blue-400 p-1 text-white rounded mt-10 hover:bg-blue-500 transition duration-300 ease-in-out'>Login</button>\r\n    <button className='mx-10 bg-blue-400 p-1 text-white rounded mt-4 hover:bg-blue-500 transition duration-300 ease-in-out'>New User</button>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n</>\r\n)\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default LoginPage;","D:\\electron\\my-app\\Client\\src\\components\\Menu.js",["230"],"import React,{useContext} from 'react'\r\n/* import './Styles/Menu.css' */\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTachometerAlt, faList,faCog, faChartLine, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\r\nimport Todo from './Notes/ToDo';\r\nimport Customers from './Customers/Customers'\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport Settings from './Settings/Settings'\r\nimport CustomerPage from './Customers/CustomerPage'\r\nimport AddProject from './Customers/AddProject'\r\nimport AddCustomer from './Customers/AddCustomer'\r\nimport {DataContext} from './context'\r\n\r\nconst Menu = () => {\r\nconst [state,setState] = useContext(DataContext)\r\nconst {Customerid} = state\r\n\r\nconst logout =()=>{\r\n\r\n  setState((prevState) => ({...prevState, isLoggedin: false}) );\r\n\r\n\r\n}\r\n\r\n  return (\r\n    <Router>\r\n    <div className=\"bar-right  bg-blue-900 text-white flex-shrink-0  \">\r\n        <div className=\"menu flex flex-col  border-none sticky top-0 \">\r\n\r\n        <div className='flex sm:flex-col justify-around'>\r\n\r\n        <Link to=\"/\">\r\n          <div className=\" flex flex-col items-center px-5 hover:bg-blue-800 focus:outline-none  \">\r\n            <p id=\"Customers\" className=\"menutext p-3\" > \r\n              <FontAwesomeIcon className=\"i\" icon={faUser} />\r\n             \r\n            </p>\r\n              <span className=\"mb-5\">לקוחות</span> \r\n            </div>\r\n            </Link>\r\n\r\n          <hr className=\"solid opacity-50\"></hr>\r\n\r\n\r\n          <Link to=\"/Notes\">\r\n          <div className=\" flex flex-col items-center px-5 hover:bg-blue-800 focus:outline-none \">\r\n          <p id=\"Todo\" className=\"menutext p-3\" >\r\n              <FontAwesomeIcon className=\"i\" icon={faList} />\r\n              \r\n          </p>\r\n          <span className=\"mb-5\">Notes</span> \r\n           </div>\r\n            </Link>\r\n\r\n\r\n          <hr className=\"solid opacity-50\"></hr>\r\n\r\n\r\n          <Link to=\"/Dashboard\">\r\n          <div className=\" flex flex-col items-center px-5 hover:bg-blue-800 focus:outline-none flex-shrink-0 \">\r\n          <p id=\"Dashboard\" className=\"menutext p-3\" > \r\n            <FontAwesomeIcon className=\"i\" icon={faTachometerAlt} />\r\n            \r\n           \r\n          </p>\r\n          <span className=\"mb-5\">לוח בקרה</span> \r\n          </div>\r\n          </Link>\r\n\r\n\r\n          <hr className=\"solid opacity-50\"></hr>\r\n\r\n\r\n          <Link to=\"/Settings\">\r\n          <div className=\" flex flex-col items-center px-5 hover:bg-blue-800 focus:outline-none \">\r\n          <p id=\"Settings\" className=\"menutext p-3\" > \r\n            <FontAwesomeIcon className=\"i\" icon={faCog} />\r\n          </p>\r\n          <span className=\"mb-5\">הגדרות</span> \r\n          </div>\r\n            </Link>\r\n\r\n            <hr className=\"solid opacity-50\"></hr>\r\n\r\n            </div>\r\n            <button onClick={logout} className='my-auto mx-2  sm:my-5 hover:bg-blue-600 bg-blue-700 py-1 px-2 rounded'>התנתק</button>\r\n        </div>\r\n    </div>\r\n          <Switch>\r\n          <Route exact path=\"/Notes\" component={Todo}></Route>\r\n          <Route exact path=\"/Dashboard\" component={Dashboard}></Route>\r\n          <Route exact path=\"/Settings\" component={Settings}></Route>\r\n          <Route exact path={`/CustomerPage/${Customerid}`} component={CustomerPage}></Route>\r\n          <Route exact path=\"/AddInvoice\" component={AddProject}></Route>\r\n          <Route exact path=\"/AddCustomer\" component={AddCustomer}></Route>\r\n          <Route exact path=\"/\" component={Customers} ></Route>\r\n          </Switch>\r\n\r\n    </Router>\r\n  );\r\n\r\n\r\n  \r\n};\r\n\r\n\r\nexport default Menu;","D:\\electron\\my-app\\Client\\src\\components\\Customers\\Customers.js",[],"D:\\electron\\my-app\\Client\\src\\components\\Customers\\CustomerPage.js",["231","232","233","234","235"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"../Styles/CustomerPage.css\";\r\nimport { DataContext } from \"../context\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Spinner from \"../Styles/Spinner\";\r\nimport CustomerPageTop from \"./CustomerPageTop\"\r\n\r\n\r\nconst CustomerPage = (props) => {\r\n  const [state, setState] = useContext(DataContext);\r\n  const { Customerid } = state;\r\n  const history = useHistory();\r\n  const [cdata, setCdata] = useState([]);\r\n \r\n\r\nconst showindex = (index) =>{\r\n\r\nconsole.log(index)\r\n\r\n}\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://localhost:4000/getcustomer\", { idn: Customerid })\r\n      .then((res) => {\r\n        setCdata(res.data[0].projects);})\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [state.customer_list]);\r\n\r\n  if (cdata === undefined) {\r\n    return (\r\n  <>\r\n<div className=\"projectCard mx-auto pt-5 \">\r\n    <CustomerPageTop/>\r\n   <h1> לא נמצאו פרויקטים :(</h1>\r\n    </div>\r\n </>\r\n      )}\r\nelse{\r\n  return (\r\n    \r\n   \r\n     <div className=\"mx-auto\">\r\n          <CustomerPageTop/> \r\n        <div className='max-h-full overflow-auto '>\r\n              <div dir='ltr' className=\"projectscontainer max-h-96 overflow-auto mt-6\" >\r\n                  {cdata.map((project,index) => (\r\n                    <ProjectCard\r\n                      amount={project.amount}\r\n                      name={project.projectname}\r\n                      key={project.projectname}\r\n                      projectIndex={index}\r\n                      projectId={project}\r\n                      customerid={Customerid}/>\r\n                  ))}\r\n                \r\n              </div>\r\n          </div>\r\n      </div>\r\n     \r\n     \r\n  );\r\n};\r\n}\r\nexport default CustomerPage;\r\n","D:\\electron\\my-app\\Client\\src\\components\\Customers\\AddCustomer.js",["236","237"],"import React, {useContext, useState, useEffect} from 'react'\r\n/* import './Styles/AddCustomer.css' */\r\nimport {DataContext} from '../context'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddCustomer = () => {\r\n\r\n\r\nconst theDate = new Date();\r\nconst CurrentDate = `${theDate.getDate()}.${(theDate.getMonth()+1)}.${theDate.getFullYear()}`\r\n\r\n  \r\n  const addcustomer = \r\n{\r\n  name: \"\",\r\n  email: \"\",\r\n  projects: []  \r\n}\r\n\r\n\r\nlet history = useHistory();\r\nconst [state, setState] = useContext(DataContext)\r\nconst {customer_list} = state\r\nconst [name,setName] = useState('')\r\nconst [email,setEmail] = useState('')\r\nconst [formdata, setFormData] = useState(addcustomer)\r\n\r\n\r\n\r\n\r\nconst formclick = (e) => {\r\n      e.preventDefault();\r\n      setFormData((prevState) => ({...prevState, name: name, email: email}));\r\n      console.log(CurrentDate)\r\n    }\r\n\r\n\r\nconst updateName = (e) => {\r\n  setName(e.target.value)\r\n}\r\n\r\nconst updateMail = (e) => {\r\n  setEmail(e.target.value)\r\n}\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if(name !== ''){\r\n      axios.post('http://localhost:4000/addcustomer', formdata)\r\n      .then(res => {\r\n       console.log(res.data);\r\n       setState((prevState) => ({...prevState, customer_list: res.data}));           \r\n      })\r\n      .then(()=>{history.push(\"/\")})\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        \r\n      });\r\n    }\r\n\r\nelse console.log('init')\r\n\r\n}, [formdata]);\r\n\r\n\r\nreturn (\r\n  <React.Fragment>\r\n    <div dir=\"rtl\" className=\"main-div-AddCustomer\">\r\n      <form onSubmit={formclick}>\r\n        <p id=\"titlec\">הוספת לקוח</p>\r\n        <div className=\"inputs\">\r\n          <label id=\"1Name\">שם לקוח</label>\r\n\r\n          <input\r\n            id=\"1Name\"\r\n            placeholder=\"שם לקוח\"\r\n            name=\"name\"\r\n            className=\"newcustname\"\r\n            type=\"text\"\r\n            onChange={updateName}\r\n          />\r\n          <br />\r\n\r\n          <label id=\"mail1\">מייל</label>\r\n          <input\r\n            id=\"mail1\"\r\n            placeholder=\"אימייל\"\r\n            name=\"email\"\r\n            className=\"newcustname\"\r\n            type=\"text\"\r\n            onChange={updateMail}\r\n          />\r\n\r\n          <br />\r\n        </div>\r\n        <div id=\"buttons-bottom\">\r\n          <button type=\"reset\" onClick={()=> history.goBack()}>חזור</button>\r\n          <button type=\"submit\">אישור</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </React.Fragment>\r\n);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nexport default AddCustomer;","D:\\electron\\my-app\\Client\\src\\components\\Customers\\AddProject.js",["238","239"],"import React, { useContext, useState, useEffect } from 'react'\r\n/* import '../Styles/AddCustomer.css' */\r\nimport { DataContext } from '../context'\r\nimport axios from 'axios'\r\nimport '../Styles/AddInvoice.css'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst AddProject = () => {\r\n  const [state, setState] = useContext(DataContext)\r\n  const { Customerid } = state;\r\n\r\n  let year = new Date().getFullYear();\r\n\r\n  const projectData = {\r\n\r\n    id: Customerid,\r\n\r\n    dbdata: {\r\n      year: year,\r\n      projectname: \"\",\r\n      amount: \"\"\r\n    }\r\n  }\r\n\r\n  let history = useHistory();\r\n  const [name, setName] = useState('')\r\n  const [amount, setAmount] = useState('')\r\n  const [formdata, setFormData] = useState(projectData)\r\n\r\n\r\n  const formclick = (e) => {\r\n    e.preventDefault();\r\n    setFormData((prevState) => ({ ...prevState, dbdata: { ...prevState.dbdata, projectname: name, amount: amount } }));\r\n\r\n  }\r\n\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  const updateQuility = (e) => {\r\n    setAmount(e.target.value)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (name !== '') {\r\n      axios.post(`http://localhost:4000/addproject`, formdata)\r\n        .then(res => {\r\n          console.log(res.data);\r\n          history.goBack();\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else console.log('init')\r\n  }, [formdata]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div dir=\"rtl\" className=\"main-div-AddCustomer\">\r\n        <form onSubmit={formclick}>\r\n          <p id=\"titlec\"> פרויקט חדש </p>\r\n          <div className=\"inputs\">\r\n            <label id=\"1Name\">שם פרויקט</label>\r\n\r\n            <input id=\"1Name\" placeholder=\"שם פרויקט\" name=\"name\" className=\"newcustname\" type=\"text\"\r\n              onChange={updateName} />\r\n            <br />\r\n\r\n            <label id=\"mail1\">קובץ</label>\r\n\r\n            <input id=\"mail1\" placeholder=\"קובץ\" name=\"quality\" className=\"newcustname\" type=\"text\"\r\n              onChange={updateQuility} />\r\n\r\n            <br />\r\n\r\n            <label id=\"mail1\">איכות</label>\r\n            <div className=\"radios\" >\r\n              <div>\r\n                <input type=\"radio\" id=\"HD\" name=\"QT\" value=\"HD\" />\r\n         HD\r\n          </div>\r\n              <div>\r\n                <input type=\"radio\" id=\"4K\" name=\"QT\" value=\"4K\" />\r\n          4K\r\n          </div>\r\n              <div>\r\n                <input type=\"radio\" id=\"MOBILE\" name=\"QT\" value=\"MOBILE\" />\r\n          MOBILE\r\n          </div>\r\n            </div>\r\n            {/*    <input id=\"mail1\" placeholder=\"קובץ\" name=\"quality\" className=\"newcustname\" type=\"text\"\r\n           onChange={updateQuility} /> */}\r\n\r\n            <br />\r\n\r\n            <label id=\"mail1\">חוזה</label>\r\n\r\n            <input id=\"mail1\" placeholder=\"חוזה\" name=\"contract\" className=\"newcustname\" type=\"text\"\r\n              onChange={updateQuility} />\r\n\r\n\r\n\r\n\r\n          </div>\r\n          <div id=\"buttons-bottom\">\r\n            <button onClick={() => history.goBack()}>חזור</button>\r\n            <button type=\"reset\" >איפוס</button>\r\n            <button type=\"submit\">אישור</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default AddProject;","D:\\electron\\my-app\\Client\\src\\components\\Settings\\Settings.js",["240"],"import React, {useContext} from 'react'\r\n/* import './Styles/Settings.css' */\r\nimport {DataContext} from '../context'\r\n\r\n\r\n\r\nconst Settings = () => {\r\n\r\n    const [state] = useContext(DataContext)\r\n   \r\n\r\n\r\n\r\n\r\nreturn (\r\n  <div dir=\"rtl\" className=\"main-div-Settings flex flex-col mx-auto\">\r\n    <h1 className=\"text-3xl  pt-11 pb-5  text-center\">הגדרות</h1>\r\n\r\n    <div className=\"flex items-center mx-auto \">\r\n      <span className='pl-3'>חשבונית מספר</span>\r\n      <input className='p-1 w-20 rounded focus:outline-none' type=\"text\" placeholder=\"54\" />\r\n      <button className='px-3 py-1 rounded m-2 bg-blue-200 focus:outline-none'>עדכן</button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nexport default Settings;","D:\\electron\\my-app\\Client\\src\\components\\Dashboard\\Dashboard.js",["241"],"import React, {useContext} from 'react'\r\n/* import './Styles/Dashboard.css' */\r\nimport {DataContext} from '../context'\r\nimport { Line } from 'react-chartjs-2'\r\nimport Finance from './Finance'\r\nimport {data} from './ChartsData'\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [state] = useContext(DataContext)\r\n    \r\n\r\n\r\n    \r\nconst Selected = (e)=> {\r\n\r\nconsole.log(e.target.value)\r\n\r\n}\r\n\r\n\r\nconsole.log('dashboard rendered')\r\nreturn (\r\n\r\n  <div className=\"mx-auto overflow-auto\">\r\n<h1 className=\"text-3xl  pt-11 pb-5  text-center\">לוח בקרה</h1>\r\n    <Finance />\r\n    <div className=\"data-container  \">\r\n      <Line data={data} />\r\n    </div>\r\n    <div className='flex mt-10  '>\r\n    <div className='flex mx-auto mb-10'>\r\n    <button className=\"bg-blue-900 rounded text-white px-5 py-2  text-grey text-lg hover:bg-blue-800\">\r\n      דוח שנתי\r\n    </button>\r\n    <select onChange={Selected} name=\"year\" id=\"year\" className='text-lg hover:bg-blue-800 rounded bg-blue-900 text-white mr-3 px-3 '>\r\n      <option  className='py-5' value=\"2021\">2021</option>\r\n      <option className='py-5' value=\"2020\">2020</option>\r\n    </select>\r\n    </div>\r\n    </div> \r\n  </div>\r\n);\r\n}\r\n\r\n\r\nexport default Dashboard;","D:\\electron\\my-app\\Client\\src\\components\\Customers\\CustomerCard.js",["242"],"import React, {useContext} from 'react'\r\n/* import './Styles/CustomerCard.css' */\r\nimport {DataContext} from '../context'\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n function CustomerCard(props) {\r\n    const [state,setState] = useContext(DataContext)\r\n    const {idd, costumername, projects, customerIndex} = props;\r\n\r\n\r\n\r\n    const clicked = (e) => {\r\n        setState((prevState) => ({...prevState, customerIndex: customerIndex}) );\r\n        const idnum = costumername\r\n        setState(prevState => ({...prevState, CustomerName: idnum, Customerid: idd}))\r\n    }\r\n\r\n\r\n    const numprojects = () => {\r\n\r\n        if (projects === undefined) {\r\n            return 0;\r\n        } else {\r\n            return projects.length\r\n        }   \r\n    }\r\n\r\n\r\n    return (\r\n       \r\n        <div className=\"C-card p-3 bg-white hover:bg-gray-50 pl-8 \"  dir = \"rtl\" id={idd} onClick={clicked} >\r\n            <Link to ={`/CustomerPage/${idd}`}>\r\n            <div className=\"Details mb-3 ml-4 flex flex-col w-full flex-shrink-0 \" id={costumername}   >\r\n            <p id={costumername} className=\"customer-name flex-shrink-0 text-lg text-blue-900\">{costumername}</p>    \r\n            <p className=\"text-sm pt-1 flex-shrink-0 text-blue-900 \" id=\"projects\"> {`${numprojects()} פרויקטים`} </p>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CustomerCard","D:\\electron\\my-app\\Client\\src\\components\\Customers\\SearchBar.js",["243"],"import React, {useContext} from 'react'\r\n/* import './Styles/SearchBar.css' */\r\nimport {DataContext} from '../context'\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\nconst SearchBar = () => {\r\nconst [state,setState] = useContext(DataContext)\r\n\r\nconst updateValue = (e) => {\r\nconst svalue = e.target.value\r\nsetState(prevState => ({...prevState, searchValue: svalue}))}\r\n\r\n\r\n  return (\r\n    <div className=\"searchbar flex p-3 justify-center focus:outline-none\" dir=\"rtl\">\r\n      <input className=\"w-72 px-2 focus:outline-none\"\r\n        type=\"text\" \r\n        id=\"search\" \r\n        placeholder=\"חיפוש לקוח\" \r\n        onChange={updateValue}/>\r\n        <Link to=\"/AddCustomer\">\r\n      <div className=\"plusbtn bg-white px-4 py-1 mr-4 hover:bg-gray-100 \">\r\n        <button className=\"text-3xl text-blue-900 mb-1 focus:outline-none\"> + </button>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","D:\\electron\\my-app\\Client\\src\\components\\Customers\\ProjectCard.js",["244","245","246"],"import React, { useContext, useState } from 'react'\r\nimport { DataContext } from '../context'\r\nimport '../Styles/ProjectCard.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretSquareLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport { saveAs } from 'file-saver'\r\n\r\nconst ProjectCard = (props) => {\r\n  const {id, projectId} = props;\r\n  const [state, setState] = useContext(DataContext)\r\n  const { CustomerName, Customerid, customer_list, customerIndex } = state\r\n  const [descreption, setDescreption] = useState('')\r\n  const [amount, setAmount] = useState('')\r\n  const [clicked, setClicked] = useState(false)\r\n\r\n\r\n\r\n  const updateDescription = (e) => {\r\n    setDescreption(e.target.value)\r\n  }\r\n\r\n  const updateAmount = (e) => {\r\n    setAmount(e.target.value)\r\n  }\r\n\r\n\r\n  const getinvoice = () => {\r\n    axios.post('http://localhost:4000/createpdf', { id: CustomerName, descreption: descreption, amount: amount })\r\n      .then(() => axios.get('http://localhost:4000/fetch-pdf', { responseType: 'blob' }))\r\n      .then((res) => {\r\n        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n         saveAs(pdfBlob, 'newPdf.pdf');\r\n      })\r\n\r\n  }\r\n\r\n\r\n  \r\nconst deleteproject = () => {\r\n  axios.post('http://localhost:4000/deleteproject',{customerid:Customerid, projectid:projectId._id} )\r\n  .then((res)=>{setState((prevState) => ({...prevState, customer_list: res.data}) );})\r\n\r\n\r\n\r\n  .catch((err)=> console.log('no'))\r\n\r\n}\r\n\r\nconst wasClicked = (e, index) => {\r\nsetClicked(!clicked)\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n    <div dir='rtl' \r\n         className={`mb-1 border-2 bg-gray-50 px-3 py-2 rounded ${clicked ? \"h-full\" : \"h-12\"} overflow-hidden\r\n         cursor-pointer hover:bg-white trasition duration-200 easy-in-out `}  >\r\n\r\n        <div className='flex justify-between  pb-3'  onClick={wasClicked}>\r\n              <h2 ><FontAwesomeIcon className=\"icon\" icon={faCaretSquareLeft} /> {props.name} </h2>\r\n              <h4 >{/* {props.amount} */}</h4>\r\n              <button  onClick={deleteproject}>X</button>\r\n        </div>\r\n\r\n        <div className='flex'>\r\n                 <input className='ml-2 p-1 rounded border' name=\"descreption\"  placeholder=\"תיאור\" type=\"text\"  onChange={updateDescription}></input>\r\n                 <input className='ml-2 p-1 rounded border'  name=\"amount\" placeholder=\"סכום\" type=\"text\" onChange={updateAmount}></input>\r\n                 <button className='bg-gray-200 p-1 rounded' onClick={getinvoice} id=\"invoice\">חשבונית</button>\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default ProjectCard","D:\\electron\\my-app\\Client\\src\\components\\Customers\\CustomerPageTop.js",["247","248","249"],"import React, { useState, useContext } from \"react\";\r\nimport { DataContext } from \"../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faMinusSquare, faPlusSquare, faChevronRight,} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n/* import \"./Styles/CustomerPage.css\"; */\r\n\r\n\r\n\r\nexport default function CustomerPageTop() {\r\n\r\n    const [state, setState] = useContext(DataContext);\r\n    const { Customerid, toaster, CustomerName, customer_list } = state;\r\n    let history = useHistory();\r\n\r\n    const removeCustomer = () => {\r\n        const id = Customerid;\r\n        axios\r\n            .post(\"http://localhost:4000/deletecustomer\", { data: id })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setState((prevState) => ({ ...prevState, customer_list: res.data }));\r\n                history.push(\"/\");\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        setState((prevState) => ({ ...prevState, toaster: 'deleted' }));\r\n\r\n        setTimeout(() => {\r\n            setState((prevState) => ({ ...prevState, toaster: '' }));\r\n        }, 2400);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\" flex mx-auto pt-14 w-full justify-between px-8 \">\r\n           \r\n            <div >\r\n\r\n                <button className=\"back-btn bg-white rounded p-1 focus:outline-none\"\r\n                    onClick={() => history.goBack()}>\r\n                    <FontAwesomeIcon className=\"icons\" icon={faChevronRight}></FontAwesomeIcon>\r\n                    <p className=\"btntext\">חזור</p>\r\n                </button>\r\n\r\n                    <Link to=\"/AddInvoice\">\r\n                <button className=\"add-btn bg-white rounded p-1 mr-3 focus:outline-none\">\r\n                        <FontAwesomeIcon className=\"icons\" icon={faPlusSquare}></FontAwesomeIcon>\r\n                    <div className=\"btntext\">הוסף</div>\r\n                </button>\r\n                    </Link>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <h1 className=\"Name text-3xl\"> {CustomerName}</h1>\r\n            </div>\r\n\r\n            <div>\r\n                <button className=\"bg-white rounded p-1 focus:outline-none\" id=\"remove-btn\" onClick={removeCustomer}>\r\n                    <FontAwesomeIcon className=\"icons\" icon={faMinusSquare}></FontAwesomeIcon>\r\n                    <div className=\"btntext\"> מחק</div>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\electron\\my-app\\Client\\src\\components\\Dashboard\\Finance.js",[],"D:\\electron\\my-app\\Client\\src\\components\\Dashboard\\ChartsData.js",[],"D:\\electron\\my-app\\Client\\src\\components\\Styles\\Spinner.js",[],"D:\\electron\\my-app\\Client\\src\\components\\Styles\\Toaster\\ToasterComponent.js",["250"],"import React, {useContext} from 'react'\r\nimport './ToasterComponent.css'\r\nimport {DataContext} from '../../context'\r\n\r\n\r\nexport default function ToasterComponent() {\r\n\r\n    const [state] = useContext(DataContext);\r\n    const {toaster,Customer} = state;\r\n\r\n    return (\r\n        <div\r\n            id=\"snackbar\"\r\n            className={toaster === 'deleted' ? 'show' : ''}\r\n            >לקוח נמחק בהצלחה\r\n        </div>\r\n    )\r\n}\r\n","D:\\electron\\my-app\\Client\\src\\components\\Dashboard\\InfoCard.js",[],"D:\\electron\\my-app\\client\\src\\index.js",[],["251","252"],"D:\\electron\\my-app\\client\\src\\App.js",[],"D:\\electron\\my-app\\client\\src\\serviceWorker.js",[],"D:\\electron\\my-app\\client\\src\\components\\context.js",[],"D:\\electron\\my-app\\client\\src\\Main.js",["253","254"],"import React, { useContext } from \"react\";\r\nimport Menu from \"./components/Menu\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport { AuthContext } from './components/Auth'\r\nimport { BrowserRouter as Router,Route,Redirect} from \"react-router-dom\";\r\nimport Customers from './components/Customers/Customers'\r\n\r\nconst Main = () => {\r\n\r\n  const [Auth] = useContext(AuthContext);\r\n  const {isLoggedin} = Auth;\r\n\r\nif(isLoggedin){ return (\r\n  <Router>\r\n    <Menu/>\r\n  </Router>)}\r\n\r\n{return <Router>\r\n   <Route exact path=\"/Login\" component={LoginPage}></Route>\r\n   <Redirect to='/Login'/>\r\n   </Router> } \r\n\r\n\r\n}\r\n\r\nexport default Main;\r\n","D:\\electron\\my-app\\client\\src\\LoginPage.js",["255","256"],"import React, {useContext,useRef,useState} from 'react'\r\nimport './LoginPage.css'\r\nimport { AuthContext } from './components/Auth'\r\nimport { DataContext } from './components/context'\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Spinner from './components/Styles/Spinner'\r\n\r\n\r\nconst LoginPage = () => {\r\n\r\nconst history = useHistory();\r\nconst [Auth,setAuth] = useContext(AuthContext); \r\nconst [state,setstate] = useContext(DataContext); \r\nconst usernameRef = useRef('')\r\nconst passwordRef = useRef('')\r\nconst [status,setstatus] = useState('')\r\nconst [isloading,setisloading]=useState(false)\r\n\r\n\r\nconst RegisterUser = () => {\r\n  if(usernameRef.current.value  && passwordRef.current.value  ){\r\n    setisloading(true)\r\n    axios.post('http://localhost:4000/register',\r\n    {username:usernameRef.current.value, password:passwordRef.current.value})\r\n    .then(res => {setstatus(res.data);setisloading(false)})\r\n      .catch(function (err) {console.log(err)})\r\n    }else{\r\n      setstatus('One Or More Field Is Empty')}\r\n}\r\n\r\n\r\nconst LoginUser = () => {\r\n  if(usernameRef.current.value  && passwordRef.current.value  ){\r\n      setisloading(true)\r\n    axios.post('http://localhost:4000/login',\r\n    {username:usernameRef.current.value,\r\n     password:passwordRef.current.value})\r\n    .then(res => {\r\n      const {isLoggedin, username,id} = res.data\r\n      if(isLoggedin){\r\n      setAuth((prevState) => ({...prevState, isLoggedin: isLoggedin, username:username}) );\r\n      localStorage.setItem('isLoggedin', isLoggedin)\r\n      localStorage.setItem('userid', id)\r\n      localStorage.setItem('username', username)\r\n      setstate((prevState) => ({...prevState, user_id: id}) );\r\n      history.push('/Customers')\r\n      window.location.reload()\r\n      } else{ setisloading(false);\r\n            setstatus(res.data)}\r\n        })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      })\r\n    }else{setstatus('One Or More Field Is Empty');}\r\n}\r\n\r\n\r\n\r\n\r\nreturn (\r\n\r\n<>\r\n<div className='flex flex-col h-screen bg-gray-100  '>\r\n\r\n<div className=' my-32'>\r\n<h1 className='text-center text-blue-900 text-xl'>M-App Login</h1>\r\n\r\n\r\n\r\n<div className='flex flex-col mx-auto my-auto max-w-sm mt-10 ' dir='rtl'>\r\n    <input ref={usernameRef} className='mx-10 p-1 rounded border' name=\"descreption\"  placeholder=\"שם משתמש\" type=\"text\" ></input>\r\n    <input ref={passwordRef}className='mx-10 p-1 mt-3 rounded border'  name=\"amount\" placeholder=\"סיסמא\" type=\"password\" ></input>\r\n    {isloading?<div className='mx-auto '><Spinner/></div>:<p className='mx-auto py-2 font-medium text-red-400'>{status}</p>}\r\n    <button onClick={LoginUser}  className='mx-10 bg-blue-400 p-1 text-white rounded mt-2 hover:bg-blue-500 transition duration-300 ease-in-out'>Log In</button>\r\n    <button onClick={RegisterUser} className='mx-10 bg-blue-400 p-1 text-white rounded mt-4 hover:bg-blue-500 transition duration-300 ease-in-out'>New User</button>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n</>\r\n)\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default LoginPage;","D:\\electron\\my-app\\client\\src\\components\\Menu.js",["257","258","259"],"import React, { useContext,useEffect } from 'react'\r\nimport './Styles/Menu.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTachometerAlt, faList, faCog, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory } from \"react-router-dom\";\r\nimport Notes from './Notes/Notes';\r\nimport Customers from './Customers/Customers'\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport Settings from './Settings/Settings'\r\nimport CustomerPage from './Customers/CustomerPage'\r\nimport AddProject from './Customers/AddProject'\r\nimport AddCustomer from './Customers/AddCustomer'\r\nimport { DataContext } from './context'\r\nimport { AuthContext } from './Auth'\r\nimport Spinner from './Styles/Spinner';\r\n\r\n\r\n\r\nconst Menu = () => {\r\n\r\n  \r\n  const [Auth, SetAuth] = useContext(AuthContext);\r\n  const { username } = Auth\r\n  const [state, setState] = useContext(DataContext)\r\n  const { Customerid, Loading } = state\r\n  const history = useHistory()\r\n\r\n\r\n\r\n  const logout = () => {\r\n    SetAuth((prevState) => ({ ...prevState, isLoggedin: false }));\r\n    localStorage.clear()\r\n    setState((prevState) => ({...prevState, customer_list: []}) );\r\n    history.push('/Login')\r\n \r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"sm:flex bg-gray-100 min-h-screen \" dir=\"rtl\">\r\n        <div className=\"bar-right bg-blue-900 text-white flex-shrink-0 sticky-top-0 z-50 \">\r\n\r\n          <div className='flex items-center sm:flex-col py-2 px-2 justify-between bg-blue-800 sm:border-b sm:border-white sm:border-opacity-50 '>\r\n            <p className='text-blue-100 px-4 text-sm text-center '>{username} מחובר</p>\r\n            <button onClick={logout} className='text-blue-300 sm:pt-2  hover:text-white  px-2 text-sm '>התנתק</button>\r\n          </div>\r\n\r\n       \r\n\r\n          <div className='flex sm:flex-col content-evenly justify-around '>\r\n\r\n                <Link to=\"/Customers\">\r\n                    <div className=\" flex flex-col items-center px-5 sm:px-0 hover:bg-blue-800 focus:outline-none sm:border-opacity-50 sm:border-b sm:border-white sm:border-t-2:\">\r\n                        <p id=\"Customers\" className=\"menutext p-3\" >\r\n                          <FontAwesomeIcon className=\"i\" icon={faUser} />\r\n                        </p>\r\n                        <span className=\"mb-5\">לקוחות</span>\r\n                    </div>\r\n                </Link>\r\n\r\n               \r\n\r\n                <Link to=\"/Notes\">\r\n                    <div className=\" flex flex-col px-5 sm:px-0 items-center hover:bg-blue-800 focus:outline-none sm:border-b sm:border-white sm:border-opacity-50\">\r\n                      <p id=\"Todo\" className=\"menutext p-3\" >\r\n                        <FontAwesomeIcon className=\"i\" icon={faList} />\r\n\r\n                      </p>\r\n                      <span className=\"mb-5\">Notes</span>\r\n                    </div>\r\n                </Link>\r\n\r\n           \r\n\r\n                <Link to=\"/Dashboard\">\r\n                    <div className=\" flex flex-col items-center px-3 sm:px-0 hover:bg-blue-800 focus:outline-none flex-shrink-0 sm:border-b sm:border-white sm:border-opacity-50\">\r\n                      <p id=\"Dashboard\" className=\"menutext p-3\" >\r\n                        <FontAwesomeIcon className=\"i\" icon={faTachometerAlt} />\r\n                      </p>\r\n                      <span className=\"mb-5\">לוח בקרה</span>\r\n                    </div>\r\n                </Link>\r\n\r\n           \r\n\r\n                <Link to=\"/Settings\" >\r\n                    <div className=\" flex flex-col items-center px-5 sm:px-0 hover:bg-blue-800 focus:outline-none flex-shrink-0 sm:border-b sm:border-white sm:border-opacity-50\">\r\n                      <p id=\"Settings\" className=\"menutext p-3\" >\r\n                        <FontAwesomeIcon className=\"i\" icon={faCog} />\r\n                      </p>\r\n                      <span className=\"mb-5\">הגדרות</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                {/* <hr className=\"solid opacity-50\"></hr> */}\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/Notes\" component={Notes}></Route>\r\n          <Route exact path=\"/Dashboard\" component={Dashboard}></Route>\r\n          <Route exact path=\"/Settings\" component={Settings}></Route>\r\n          <Route exact path={`/CustomerPage/${Customerid}`} component={CustomerPage}></Route>\r\n          <Route exact path=\"/AddInvoice\" component={AddProject}></Route>\r\n          <Route exact path=\"/AddCustomer\" component={AddCustomer}></Route>\r\n          <Route exact path=\"/Customers\" component={Customers} ></Route>\r\n          <Route exact path=\"/\" component={Customers} ></Route>\r\n\r\n        </Switch>\r\n\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default Menu;","D:\\electron\\my-app\\client\\src\\components\\Customers\\Customers.js",["260","261","262"],"import React, { useContext,useEffect  } from 'react'\r\nimport { DataContext } from '../context'\r\nimport CusomerCard from './CustomerCard'\r\nimport SearchBar from './SearchBar'\r\nimport ToasterComponent from \"../Styles/Toaster/ToasterComponent\";\r\nimport '../Styles/Customers.css'\r\n\r\nexport default function Customers() {\r\n\r\n  const [state,setState] = useContext(DataContext);\r\n  const { customer_list, searchValue, Loading } = state;\r\n  const newCustArr = customer_list.filter((customer) => customer.name.includes(searchValue)\r\n  );\r\n\r\n  return (\r\n    \r\n    <div className=\"clients-main w-screen \">\r\n      <div className=\" flex flex-col\">\r\n        <h1 className=\"text-3xl  pt-11 pb-5  text-center\">לקוחות</h1>\r\n\r\n        <SearchBar />\r\n\r\n        <p\r\n          id=\"numcutsomers\"\r\n          dir=\"rtl\"\r\n          className=\"px-4 text-center pb-4 \">\r\n          {` ${newCustArr.length} לקוחות נמצאו`}\r\n        </p>\r\n\r\n\r\n        <div className=\" p-5 flex m-auto  \">\r\n          <div className=\"cust grid grid-cols-2 gap-2 md:grid-cols-3  \" dir=\"rtl\">\r\n            <ToasterComponent />\r\n            {newCustArr.map((item,index) => (\r\n              <CusomerCard\r\n                key={item._id}\r\n                idd={item._id}\r\n                costumername={item.name}\r\n                projects={item.projects}\r\n                customerIndex={index}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n\r\n}\r\n","D:\\electron\\my-app\\client\\src\\components\\Customers\\CustomerPage.js",["263","264"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"../Styles/CustomerPage.css\";\r\nimport { DataContext } from \"../context\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Spinner from \"../Styles/Spinner\";\r\nimport CustomerPageTop from \"./CustomerPageTop\"\r\n\r\n\r\nconst CustomerPage = (props) => {\r\n  const [state, setState] = useContext(DataContext);\r\n  const { Customerid,Loading } = state;\r\n  const [cdata, setCdata] = useState([]);\r\n \r\n  \r\n  useEffect(() => {\r\n    setState((prevState) => ({ ...prevState, Loading: true }));\r\n    axios\r\n      .post(\"http://localhost:4000/getcustomer\", { idn: Customerid })\r\n      .then((res) => {\r\n        setCdata(res.data[0].projects);\r\n        setState((prevState) => ({ ...prevState, Loading: false }));})\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [state.customer_list]);\r\n\r\n  return (\r\n    \r\n   \r\n     <div className=\"mx-auto\">\r\n          <CustomerPageTop/> \r\n          \r\n\r\n          <div className='ml-44'>\r\n         { Loading?<Spinner/>:null}\r\n          </div>\r\n\r\n\r\n        <div className='max-h-full overflow-auto px-2 '>\r\n              <div dir='ltr' className=\"projectscontainer max-h-96 mt-6\" >\r\n                  {cdata.map((project,index) => (\r\n                    <ProjectCard\r\n                      amount={project.amount}\r\n                      name={project.projectname}\r\n                      key={project.projectname}\r\n                      projectIndex={index}\r\n                      projectId={project}\r\n                      customerid={Customerid}/>\r\n                  ))}\r\n                \r\n              </div>\r\n          </div>\r\n      </div>\r\n     \r\n     \r\n  );\r\n};\r\n\r\nexport default CustomerPage;\r\n","D:\\electron\\my-app\\client\\src\\components\\Customers\\AddProject.js",["265","266","267"],"import React, { useContext, useState, useEffect } from 'react'\r\n/* import '../Styles/AddCustomer.css' */\r\nimport { DataContext } from '../context'\r\nimport axios from 'axios'\r\n/* import '../Styles/AddInvoice.css' */\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst AddProject = () => {\r\n  const [state, setState] = useContext(DataContext)\r\n  const { Customerid } = state;\r\n\r\n  let year = new Date().getFullYear();\r\n\r\n  const projectData = {\r\n\r\n    id: Customerid,\r\n\r\n    dbdata: {\r\n      year: year,\r\n      projectname: \"\",\r\n      amount: \"\"\r\n    }\r\n  }\r\n\r\n  let history = useHistory();\r\n  const [name, setName] = useState('')\r\n  const [amount, setAmount] = useState('')\r\n  const [formdata, setFormData] = useState(projectData)\r\n\r\n\r\n  const formclick = (e) => {\r\n    e.preventDefault();\r\n    setFormData((prevState) => ({ ...prevState, dbdata: { ...prevState.dbdata, projectname: name, amount: amount } }));\r\n\r\n  }\r\n\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  const updateQuility = (e) => {\r\n    setAmount(e.target.value)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (name !== '') {\r\n      axios.post(`http://localhost:4000/addproject`, formdata)\r\n        .then(res => {\r\n          console.log(res.data);\r\n          history.goBack();\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    } else console.log('init')\r\n  }, [formdata]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div dir=\"rtl\" className=\"mx-auto mt-10\">\r\n        <form onSubmit={formclick}>\r\n        <p className='text-2xl text-center'>פרויקט חדש</p>\r\n          <div className=\"mt-10\">\r\n          \r\n\r\n            <input  placeholder=\"שם פרויקט\" name=\"name\" className=\"mt-2 p-2\" type=\"text\"\r\n              onChange={updateName} />\r\n            <br />\r\n\r\n          </div>\r\n          <div className=\"flex justify-between mt-10\">\r\n            <button type=\"submit\" className='bg-blue-800 text-white rounded py-2 px-4 hover:bg-blue-600'>אישור</button>\r\n            <button onClick={() => history.goBack()} className='bg-blue-800 text-white rounded py-2 px-4 hover:bg-blue-600'>חזור</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default AddProject;","D:\\electron\\my-app\\client\\src\\components\\Customers\\AddCustomer.js",["268","269","270","271","272"],"import React, {useContext, useState, useEffect} from 'react'\r\n/* import './Styles/AddCustomer.css' */\r\nimport {DataContext} from '../context'\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddCustomer = () => {\r\n\r\n\r\nconst theDate = new Date();\r\nconst CurrentDate = `${theDate.getDate()}.${(theDate.getMonth()+1)}.${theDate.getFullYear()}`\r\n\r\n  \r\n  const addcustomer = \r\n{\r\n  userid:localStorage.getItem('userid'),\r\n  name: \"\",\r\n  email: \"\",\r\n  projects: []  \r\n}\r\n\r\n\r\nlet history = useHistory();\r\nconst [state, setState] = useContext(DataContext)\r\nconst {customer_list,Customerid} = state\r\nconst [name,setName] = useState('')\r\nconst [email,setEmail] = useState('')\r\nconst [formdata, setFormData] = useState(addcustomer)\r\n\r\n\r\n\r\n\r\nconst formclick = (e) => {\r\n      e.preventDefault();\r\n      setFormData((prevState) => ({...prevState, name: name, email: email}));\r\n      \r\n    }\r\n\r\n\r\nconst updateName = (e) => {\r\n  setName(e.target.value)\r\n}\r\n\r\n\r\n\r\nuseEffect(() => {\r\n  if(name !== ''){\r\n      axios.post('http://localhost:4000/addcustomer', formdata)\r\n      .then(res => {\r\n       console.log(res.data);\r\n       setState((prevState) => ({...prevState, customer_list: res.data}));           \r\n      })\r\n      .then(()=>{history.push('/Customers')})\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        \r\n      });\r\n    }\r\n\r\nelse console.log('init')\r\n\r\n}, [formdata]);\r\n\r\n\r\nreturn (\r\n  <>\r\n    <div dir=\"rtl\" className=\"mx-auto mt-10 flex flex-col\">\r\n      <form onSubmit={formclick}>\r\n        <p className='text-2xl text-center'>הוספת לקוח</p>\r\n        <div className=\"mt-10\">\r\n          <input  placeholder=\"שם לקוח\"  name=\"name\"  className='mt-2 p-2'  type=\"text\"  onChange={updateName}></input>\r\n          <br />\r\n          <input  placeholder=\"אימייל\"  name=\"name\"  className='mt-4 p-2'  type=\"text\"  onChange={updateName}></input>\r\n        </div>\r\n        <div className='mt-10 flex justify-between'>\r\n          <button type=\"submit\" className='bg-blue-800 text-white rounded py-2 px-4 hover:bg-blue-600'>אישור</button>\r\n          <button type=\"reset\" className='mr-10 bg-blue-800 text-white rounded py-2 px-4 hover:bg-blue-600' onClick={()=> history.goBack()}>חזור </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </>\r\n);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nexport default AddCustomer;","D:\\electron\\my-app\\client\\src\\components\\Settings\\Settings.js",["273"],"import React, {useContext} from 'react'\r\nimport '../Styles/Settings.css'\r\nimport {DataContext} from '../context'\r\n\r\n\r\n\r\nconst Settings = () => {\r\n\r\n    const [state] = useContext(DataContext)\r\n   \r\n\r\n\r\n\r\n\r\nreturn (\r\n  <div dir=\"rtl\" className=\"settings-main flex flex-col mx-auto\">\r\n    <h1 className=\"text-3xl  pt-11 pb-5  text-center\">הגדרות</h1>\r\n\r\n    <div className=\"flex items-center mx-auto \">\r\n      <span className='pl-3'>חשבונית מספר</span>\r\n      <input className='p-1 w-20 rounded focus:outline-none' type=\"text\" placeholder=\"54\" />\r\n      <button className='px-3 py-1 rounded m-2 bg-blue-200 focus:outline-none'>עדכן</button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nexport default Settings;","D:\\electron\\my-app\\client\\src\\components\\Dashboard\\Dashboard.js",["274"],"import React, {useContext} from 'react'\r\nimport '../Styles/Dashboard.css'\r\nimport {DataContext} from '../context'\r\nimport { Line } from 'react-chartjs-2'\r\nimport Finance from './Finance'\r\nimport {data} from './ChartsData'\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [state] = useContext(DataContext)\r\n    \r\n\r\n\r\n    \r\nconst Selected = (e)=> {\r\n\r\nconsole.log(e.target.value)\r\n\r\n}\r\n\r\n\r\nconsole.log('dashboard rendered')\r\nreturn (\r\n\r\n  <div className=\"dashboard-main mx-auto overflow-auto\">\r\n<h1 className=\"text-3xl  pt-11 pb-5  text-center\">לוח בקרה</h1>\r\n    <Finance />\r\n    <div className=\"data-container  \">\r\n      <Line data={data} />\r\n    </div>\r\n    <div className='flex mt-10  '>\r\n    <div className='flex mx-auto mb-10'>\r\n    <button className=\"bg-blue-900 rounded text-white px-5 py-2  text-grey text-lg hover:bg-blue-800\">\r\n      דוח שנתי\r\n    </button>\r\n    <select onChange={Selected} name=\"year\" id=\"year\" className='text-lg hover:bg-blue-800 rounded bg-blue-900 text-white mr-3 px-3 '>\r\n      <option  className='py-5' value=\"2021\">2021</option>\r\n      <option className='py-5' value=\"2020\">2020</option>\r\n    </select>\r\n    </div>\r\n    </div> \r\n  </div>\r\n);\r\n}\r\n\r\n\r\nexport default Dashboard;","D:\\electron\\my-app\\client\\src\\components\\Customers\\CustomerCard.js",["275"],"import React, {useContext} from 'react'\r\n/* import './Styles/CustomerCard.css' */\r\nimport {DataContext} from '../context'\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n function CustomerCard(props) {\r\n    const [state,setState] = useContext(DataContext)\r\n    const {idd, costumername, projects, customerIndex} = props;\r\n\r\n\r\n\r\n    const clicked = (e) => {\r\n        setState((prevState) => ({...prevState, customerIndex: customerIndex}) );\r\n        const idnum = costumername\r\n        setState(prevState => ({...prevState, CustomerName: idnum, Customerid: idd}))\r\n    }\r\n\r\n\r\n    const numprojects = () => {\r\n\r\n        if (projects === undefined) {\r\n            return 0;\r\n        } else {\r\n            return projects.length\r\n        }   \r\n    }\r\n\r\n\r\n    return (\r\n       \r\n        <div className=\"C-card p-3 bg-white hover:bg-gray-50 \"  dir = \"rtl\" id={idd} onClick={clicked} >\r\n            <Link to ={`/CustomerPage/${idd}`}>\r\n            <div className=\"Details mb-3 ml-12 flex flex-col w-full overflow-hidden break-all \" id={costumername}   >\r\n            <p id={costumername} className=\"customer-name flex-shrink-0 text-lg text-blue-900\">{costumername}</p>    \r\n            <p className=\"text-sm pt-1 flex-shrink-0 text-blue-900 \" id=\"projects\"> {`${numprojects()} פרויקטים`} </p>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CustomerCard","D:\\electron\\my-app\\client\\src\\components\\Customers\\SearchBar.js",["276"],"D:\\electron\\my-app\\client\\src\\components\\Customers\\CustomerPageTop.js",["277","278"],"import React, {  useContext } from \"react\";\r\nimport { DataContext } from \"../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {faMinusSquare, faPlusSquare, faChevronRight,} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n/* import \"./Styles/CustomerPage.css\"; */\r\n\r\n\r\n\r\nexport default function CustomerPageTop() {\r\n\r\n    const [state, setState] = useContext(DataContext);\r\n    const { Customerid, toaster, CustomerName, customer_list } = state;\r\n    let history = useHistory();\r\n\r\n    const removeCustomer = () => {\r\n        const id = Customerid;\r\n        axios\r\n            .post(\"http://localhost:4000/deletecustomer\", { data: id,userid:localStorage.getItem('userid') })\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setState((prevState) => ({ ...prevState, customer_list: res.data }));\r\n                history.goBack();\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        setState((prevState) => ({ ...prevState, toaster: 'deleted' }));\r\n\r\n        setTimeout(() => {\r\n            setState((prevState) => ({ ...prevState, toaster: '' }));\r\n        }, 2400);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n                <h1 className=\"Name text-3xl mt-8 text-center\"> {CustomerName}</h1>\r\n        <div className=\" flex mx-auto pt-8 w-full justify-between  \">\r\n           \r\n            <div className='flex pr-2' >\r\n\r\n                <button className=\"items-center hover:bg-blue-800 hover:text-white flex back-btn bg-white text-gray-500 rounded p-2 focus:outline-none\"\r\n                    onClick={() => history.goBack()}>\r\n                    <FontAwesomeIcon className=\"icons\" icon={faChevronRight}></FontAwesomeIcon>\r\n                    <p className=\"btntext pr-2\">חזור</p>\r\n                </button>\r\n\r\n                    <Link to=\"/AddInvoice\">\r\n                <button className=\"hover:bg-blue-800 hover:text-white bg-white text-gray-500 flex items-center add-btn  rounded p-2 mr-3 focus:outline-none\">\r\n                        <FontAwesomeIcon className=\"icons\" icon={faPlusSquare}></FontAwesomeIcon>\r\n                    <p className=\"btntext pr-2\">פרויקט חדש</p>\r\n                </button>\r\n                    </Link>\r\n\r\n            </div>\r\n\r\n        \r\n           \r\n\r\n            <div className='pl-2'>\r\n                <button className=\"bg-white text-gray-500 hover:bg-blue-800 hover:text-white  flex items-center add-btn bg-white rounded p-2 mr-3 focus:outline-none\" id=\"remove-btn\" onClick={removeCustomer}>\r\n                    <FontAwesomeIcon className=\"icons\" icon={faMinusSquare}></FontAwesomeIcon>\r\n                    <p className=\"btntext pr-2\"> מחק לקוח</p>\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","D:\\electron\\my-app\\client\\src\\components\\Customers\\ProjectCard.js",["279","280","281"],"import React, { useContext, useState } from 'react'\r\nimport { DataContext } from '../context'\r\nimport '../Styles/ProjectCard.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretSquareLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport axios from 'axios'\r\nimport { saveAs } from 'file-saver'\r\n\r\nconst ProjectCard = (props) => {\r\n  const {id, projectId} = props;\r\n  const [state, setState] = useContext(DataContext)\r\n  const { CustomerName, Customerid, customer_list, customerIndex,user_id } = state\r\n  const [descreption, setDescreption] = useState('')\r\n  const [amount, setAmount] = useState('')\r\n  const [clicked, setClicked] = useState(false)\r\n\r\n\r\n\r\n  const updateDescription = (e) => {\r\n    setDescreption(e.target.value)\r\n  }\r\n\r\n  const updateAmount = (e) => {\r\n    setAmount(e.target.value)\r\n  }\r\n\r\n\r\n  const getinvoice = () => {\r\n    axios.post('http://localhost:4000/createpdf', { id: CustomerName, descreption: descreption, amount: amount })\r\n      .then(() => axios.get('http://localhost:4000/fetch-pdf', { responseType: 'blob' }))\r\n      .then((res) => {\r\n        const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n         saveAs(pdfBlob, 'newPdf.pdf');\r\n      })\r\n\r\n  }\r\n\r\n\r\n  \r\nconst deleteproject = () => {\r\n  axios.post('http://localhost:4000/deleteproject',\r\n  {customerid:Customerid, projectid:projectId._id,userid:user_id} )\r\n  .then((res)=>{setState((prevState) => ({...prevState, customer_list: res.data}) );})\r\n  .catch((err)=> console.log(err))\r\n\r\n}\r\n\r\nconst wasClicked = (e, index) => {\r\nsetClicked(!clicked)\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n    <div dir='rtl' \r\n         className={`mb-2 border-2 bg-gray-50 px-3 py-2 rounded ${clicked ? \"h-full\" : \"h-12 \"} transition-all ease-in-out duration-500 overflow-hidden\r\n         cursor-pointer hover:bg-white trasition duration-200 easy-in-out`}  >\r\n\r\n        <div className='flex justify-between  pb-3'  onClick={wasClicked}>\r\n              <h2 ><FontAwesomeIcon className=\"icon\" icon={faCaretSquareLeft} /> {props.name} </h2>\r\n           \r\n              <button  onClick={deleteproject}>X</button>\r\n        </div>\r\n\r\n        <div className=' flex justify-between mb-2 '>\r\n        <div >\r\n          \r\n                 <input className=' ml-4 p-1 rounded border mt-2 w-48 ' name=\"descreption\"  placeholder=\"תיאור\" type=\"text\"  onChange={updateDescription}></input>\r\n                 <input className=' p-1 ml-3 rounded border mt-2 w-28'  name=\"amount\" placeholder=\"סכום\" type=\"text\" onChange={updateAmount}></input>\r\n        </div>\r\n                 <button className=' mr-2 mt-2 bg-gray-200 p-1 rounded' onClick={getinvoice} id=\"invoice\">חשבונית</button>\r\n      \r\n                \r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default ProjectCard","D:\\electron\\my-app\\client\\src\\components\\Dashboard\\Finance.js",[],"D:\\electron\\my-app\\client\\src\\components\\Dashboard\\ChartsData.js",[],"D:\\electron\\my-app\\client\\src\\components\\Styles\\Spinner.js",[],"D:\\electron\\my-app\\client\\src\\components\\Styles\\Toaster\\ToasterComponent.js",[],"D:\\electron\\my-app\\client\\src\\components\\Dashboard\\InfoCard.js",[],["282","283"],"D:\\electron\\my-app\\client\\src\\ProtectedRoute.js",["284","285","286","287"],"D:\\electron\\my-app\\client\\src\\components\\Auth.js",["288"],"import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\n export const AuthProvider = ({children}) => {\r\n    const State = {\r\n      username:localStorage.getItem('username'),\r\n      isLoggedin:localStorage.getItem('isLoggedin')\r\n    };\r\n\r\n    const [Auth, setAuth] = useState(State)\r\n\r\n    \r\n    useEffect(() => {\r\n  \r\n\r\n      }, [State.isLoggedin]);\r\n   \r\n    return (\r\n    <AuthContext.Provider value={[Auth, setAuth]}>\r\n       {children}\r\n   </AuthContext.Provider>\r\n\r\n    )\r\n}","D:\\electron\\my-app\\client\\src\\components\\Notes\\Notes.js",["289","290"],"import React,{useState, useContext, useEffect} from 'react'\r\nimport Note from './NoteItem'\r\nimport { DataContext } from '../context'\r\nimport axios from 'axios'\r\nimport '../Styles/NoteItem.css'\r\n\r\nconst Notes = () =>{\r\n\r\nconst theDate = new Date();\r\nconst CurrentDate = `${theDate.getDate()}.${(theDate.getMonth()+1)}.${theDate.getFullYear()}`\r\nconst [state, setState] = useContext(DataContext)\r\nconst { user_id } = state\r\n\r\nconst NotesState = {\r\n      List:[]\r\n}\r\n\r\nconst [notes,setnotes] = useState(NotesState)\r\nconst [open,setopen] = useState(false)\r\nconst [noteText, setnoteText] = useState('')\r\nconst [editText, seteditText] = useState('')\r\nconst [delid, setDelid] = useState('')\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n    axios.post('http://localhost:4000/getnotes', {userid:user_id})\r\n    .then((res)=>{setnotes((prevState) => ({...prevState, List: res.data}) );console.log('got the notes!')})\r\n    .catch((err)=>console.log(err))\r\n\r\n},[delid])\r\n\r\n\r\nconst addnote =()=> {\r\n      axios.post('http://localhost:4000/addnote', {userid:user_id, noteText:noteText, date: CurrentDate})\r\n      .then((res)=>{setnotes((currState) => ({...currState, List: res.data}) );setDelid(()=>noteText)})\r\n      .catch((err)=>console.log(err))\r\n      \r\n}\r\n\r\nuseEffect(()=>{\r\n\r\n    console.log(noteText)\r\n\r\n\r\n},[noteText])\r\n\r\n/* const updatetext =(e)=> {\r\n      setnoteText(e.target.value)\r\n      console.log(e.target.value)\r\n} */\r\n\r\n\r\nconst deletenote =(id) => {\r\n\r\n    \r\n    axios.post('http://localhost:4000/deletenote', {userid:user_id, id:id})\r\n    .then((res)=>setnotes((prevState) => ({...prevState, List: res.data}) ))\r\n    .catch((err)=>console.log(err))\r\n\r\n}\r\n\r\n\r\nconst updatenote =() => {\r\n\r\n    axios.post('http://localhost:4000/updatenote', {userid:user_id, noteText:noteText})\r\n    .then((res)=>{setnotes((prevState) => ({...prevState, List: res.data }) );\r\n                 setopen(!open)})\r\n    .catch((err)=>console.log(err))\r\n\r\n}\r\n\r\n\r\nconst showmodal = (id,text)=> {\r\n\r\n    seteditText(text)\r\n    setopen(!open)\r\n\r\n}\r\n\r\n\r\n\r\n\r\nreturn(\r\n\r\n<>\r\n\r\n<div className='notes-main mx-auto overflow-auto'>\r\n\r\n        {open?\r\n            <div className='modal bg-black flex absolute w-full h-screen sticky-top-0 z-10 bg-black bg-opacity-50 right-0'>\r\n                <div className='modal-input relative rounded-md text-center mx-auto bg-gray-200 opacity-100 mt-48 flex flex-col items-end h-52'>\r\n                <button onClick={showmodal} className='mt-2 flex rounded-md bg-blue-200 ml-2 text-blue-800 absolute flex justify-end px-2 '>X</button>\r\n                    <h1 className='mt-5  mx-auto'>Edit Note</h1>\r\n                <textarea onChange={e=>setnoteText(e.target.value)} name=\"Text1\" className='rounded-md px-3 mx-10 py-2' cols=\"40\" rows=\"3\">{editText}</textarea>\r\n                <button onClick={()=>updatenote} className='rounded-md mt-3 bg-blue-200 text-blue-800  block mx-auto p-2'>Update Note</button>\r\n                </div>\r\n            </div>\r\n        :null}\r\n\r\n\r\n            <h1 className=\"text-3xl  pt-11 pb-5  text-center\">Notes</h1>\r\n            <h2 className='text-center mb-1 mt-5 mx-auto'>Add New Note</h2>\r\n\r\n        <div className='bg-blue-100 p-2 rounded-md flex mx-5 w-80 max-w-full mx-auto'>\r\n            <textarea onChange={e=>setnoteText(e.target.value)} name=\"Text1\" className='px-3 py-2' cols=\"40\" rows=\"3\"></textarea>\r\n            <button onClick={addnote} className=\"pb-1 text-3xl text-blue-900 text-center bg-white px-4 mr-2 hover:bg-gray-100 focus:outline-none hover:bg-green-50 transition duration-200 ease-in-out \"> + </button>\r\n        </div>\r\n\r\n<div className='px-4 mt-10 mb-8'>\r\n    <div className='z-0 grid grid-cols-1 sm:grid-cols-2 xl:grid-cols-3 mx-auto gap-4 '>\r\n\r\n    {notes.List.map((item,index)=>\r\n        <Note date={item.date} text={item.noteText} id={item._id} key={index} setid={deletenote} edit={showmodal} />)}\r\n\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n</>\r\n)\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Notes;","D:\\electron\\my-app\\client\\src\\components\\Notes\\NoteItem.js",["291"],"import React, {useState} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit,faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Note = (props) => {\r\n\r\n    const {date,text,setid,id,edit} = props\r\n\r\n\r\nconst sendid =(id)=>{\r\n\r\n    setid (id)\r\n\r\n}\r\n\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n\r\n<div className='noteitem flex flex-col bg-blue-100 h-28 h-full w-80 mx-auto overflow-auto transition duration-300 ease-in-out transform hover:bg-blue-50 cursor-default'>\r\n    <div className='bg-blue-200 p-2 flex justify-between'>\r\n        <p className='font-semibold'>{date}</p>\r\n            <div className='btns'>\r\n                <button onClick={()=>edit(id,text)} title='Edit' className=' px-2'> <FontAwesomeIcon className=\"i hover:text-blue-800\" icon={faEdit} /></button>\r\n                <button onClick={()=>sendid(id)} title='Delete' className=' px-2'> <FontAwesomeIcon className=\"i hover:text-blue-800\" icon={faTrash} /></button>\r\n            </div>\r\n        </div>\r\n    <p className='px-2 py-3' >{text}</p>\r\n\r\n</div>\r\n</>\r\n\r\n)\r\n\r\n}\r\nexport default Note;",{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":1,"column":16,"nodeType":"298","messageId":"299","endLine":1,"endColumn":24},{"ruleId":"296","severity":1,"message":"300","line":9,"column":8,"nodeType":"298","messageId":"299","endLine":9,"endColumn":18},{"ruleId":"296","severity":1,"message":"301","line":4,"column":41,"nodeType":"298","messageId":"299","endLine":4,"endColumn":52},{"ruleId":"296","severity":1,"message":"302","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":15},{"ruleId":"296","severity":1,"message":"303","line":12,"column":17,"nodeType":"298","messageId":"299","endLine":12,"endColumn":25},{"ruleId":"296","severity":1,"message":"304","line":14,"column":9,"nodeType":"298","messageId":"299","endLine":14,"endColumn":16},{"ruleId":"296","severity":1,"message":"305","line":18,"column":7,"nodeType":"298","messageId":"299","endLine":18,"endColumn":16},{"ruleId":"306","severity":1,"message":"307","line":33,"column":6,"nodeType":"308","endLine":33,"endColumn":27,"suggestions":"309"},{"ruleId":"296","severity":1,"message":"310","line":24,"column":8,"nodeType":"298","messageId":"299","endLine":24,"endColumn":21},{"ruleId":"306","severity":1,"message":"311","line":65,"column":4,"nodeType":"308","endLine":65,"endColumn":14,"suggestions":"312"},{"ruleId":"296","severity":1,"message":"303","line":11,"column":17,"nodeType":"298","messageId":"299","endLine":11,"endColumn":25},{"ruleId":"306","severity":1,"message":"313","line":60,"column":6,"nodeType":"308","endLine":60,"endColumn":16,"suggestions":"314"},{"ruleId":"296","severity":1,"message":"315","line":9,"column":12,"nodeType":"298","messageId":"299","endLine":9,"endColumn":17},{"ruleId":"296","severity":1,"message":"315","line":11,"column":12,"nodeType":"298","messageId":"299","endLine":11,"endColumn":17},{"ruleId":"296","severity":1,"message":"315","line":10,"column":12,"nodeType":"298","messageId":"299","endLine":10,"endColumn":17},{"ruleId":"296","severity":1,"message":"315","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":13},{"ruleId":"296","severity":1,"message":"316","line":10,"column":10,"nodeType":"298","messageId":"299","endLine":10,"endColumn":12},{"ruleId":"296","severity":1,"message":"310","line":12,"column":37,"nodeType":"298","messageId":"299","endLine":12,"endColumn":50},{"ruleId":"296","severity":1,"message":"317","line":12,"column":52,"nodeType":"298","messageId":"299","endLine":12,"endColumn":65},{"ruleId":"296","severity":1,"message":"297","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":25},{"ruleId":"296","severity":1,"message":"318","line":15,"column":25,"nodeType":"298","messageId":"299","endLine":15,"endColumn":32},{"ruleId":"296","severity":1,"message":"310","line":15,"column":48,"nodeType":"298","messageId":"299","endLine":15,"endColumn":61},{"ruleId":"296","severity":1,"message":"319","line":9,"column":20,"nodeType":"298","messageId":"299","endLine":9,"endColumn":28},{"ruleId":"292","replacedBy":"320"},{"ruleId":"294","replacedBy":"321"},{"ruleId":"296","severity":1,"message":"322","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":17},{"ruleId":"323","severity":1,"message":"324","line":18,"column":1,"nodeType":"325","messageId":"326","endLine":21,"endColumn":15},{"ruleId":"296","severity":1,"message":"327","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":12},{"ruleId":"296","severity":1,"message":"315","line":14,"column":8,"nodeType":"298","messageId":"299","endLine":14,"endColumn":13},{"ruleId":"296","severity":1,"message":"328","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":37},{"ruleId":"296","severity":1,"message":"302","line":15,"column":8,"nodeType":"298","messageId":"299","endLine":15,"endColumn":15},{"ruleId":"296","severity":1,"message":"329","line":25,"column":23,"nodeType":"298","messageId":"299","endLine":25,"endColumn":30},{"ruleId":"296","severity":1,"message":"328","line":1,"column":28,"nodeType":"298","messageId":"299","endLine":1,"endColumn":37},{"ruleId":"296","severity":1,"message":"303","line":10,"column":16,"nodeType":"298","messageId":"299","endLine":10,"endColumn":24},{"ruleId":"296","severity":1,"message":"329","line":11,"column":39,"nodeType":"298","messageId":"299","endLine":11,"endColumn":46},{"ruleId":"296","severity":1,"message":"330","line":6,"column":10,"nodeType":"298","messageId":"299","endLine":6,"endColumn":20},{"ruleId":"306","severity":1,"message":"331","line":27,"column":6,"nodeType":"308","endLine":27,"endColumn":27,"suggestions":"332"},{"ruleId":"296","severity":1,"message":"303","line":11,"column":17,"nodeType":"298","messageId":"299","endLine":11,"endColumn":25},{"ruleId":"296","severity":1,"message":"333","line":44,"column":9,"nodeType":"298","messageId":"299","endLine":44,"endColumn":22},{"ruleId":"306","severity":1,"message":"313","line":60,"column":6,"nodeType":"308","endLine":60,"endColumn":16,"suggestions":"334"},{"ruleId":"296","severity":1,"message":"335","line":11,"column":7,"nodeType":"298","messageId":"299","endLine":11,"endColumn":18},{"ruleId":"296","severity":1,"message":"310","line":25,"column":8,"nodeType":"298","messageId":"299","endLine":25,"endColumn":21},{"ruleId":"296","severity":1,"message":"336","line":25,"column":22,"nodeType":"298","messageId":"299","endLine":25,"endColumn":32},{"ruleId":"296","severity":1,"message":"337","line":27,"column":14,"nodeType":"298","messageId":"299","endLine":27,"endColumn":22},{"ruleId":"306","severity":1,"message":"311","line":62,"column":4,"nodeType":"308","endLine":62,"endColumn":14,"suggestions":"338"},{"ruleId":"296","severity":1,"message":"315","line":9,"column":12,"nodeType":"298","messageId":"299","endLine":9,"endColumn":17},{"ruleId":"296","severity":1,"message":"315","line":11,"column":12,"nodeType":"298","messageId":"299","endLine":11,"endColumn":17},{"ruleId":"296","severity":1,"message":"315","line":10,"column":12,"nodeType":"298","messageId":"299","endLine":10,"endColumn":17},{"ruleId":"296","severity":1,"message":"315","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":13},{"ruleId":"296","severity":1,"message":"318","line":15,"column":25,"nodeType":"298","messageId":"299","endLine":15,"endColumn":32},{"ruleId":"296","severity":1,"message":"310","line":15,"column":48,"nodeType":"298","messageId":"299","endLine":15,"endColumn":61},{"ruleId":"296","severity":1,"message":"316","line":10,"column":10,"nodeType":"298","messageId":"299","endLine":10,"endColumn":12},{"ruleId":"296","severity":1,"message":"310","line":12,"column":37,"nodeType":"298","messageId":"299","endLine":12,"endColumn":50},{"ruleId":"296","severity":1,"message":"317","line":12,"column":52,"nodeType":"298","messageId":"299","endLine":12,"endColumn":65},{"ruleId":"292","replacedBy":"339"},{"ruleId":"294","replacedBy":"340"},{"ruleId":"296","severity":1,"message":"341","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":19},{"ruleId":"296","severity":1,"message":"342","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":12},{"ruleId":"296","severity":1,"message":"303","line":12,"column":14,"nodeType":"298","messageId":"299","endLine":12,"endColumn":22},{"ruleId":"296","severity":1,"message":"343","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":16},{"ruleId":"296","severity":1,"message":"344","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":13},{"ruleId":"296","severity":1,"message":"303","line":11,"column":15,"nodeType":"298","messageId":"299","endLine":11,"endColumn":23},{"ruleId":"306","severity":1,"message":"345","line":31,"column":3,"nodeType":"308","endLine":31,"endColumn":10,"suggestions":"346"},{"ruleId":"296","severity":1,"message":"297","line":1,"column":16,"nodeType":"298","messageId":"299","endLine":1,"endColumn":24},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'isLoggedin' is assigned a value but never used.","'faChartLine' is defined but never used.","'Spinner' is defined but never used.","'setState' is assigned a value but never used.","'history' is assigned a value but never used.","'showindex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Customerid'. Either include it or remove the dependency array.","ArrayExpression",["349"],"'customer_list' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'name', and 'setState'. Either include them or remove the dependency array.",["350"],"React Hook useEffect has missing dependencies: 'history' and 'name'. Either include them or remove the dependency array.",["351"],"'state' is assigned a value but never used.","'id' is assigned a value but never used.","'customerIndex' is assigned a value but never used.","'toaster' is assigned a value but never used.","'Customer' is assigned a value but never used.",["347"],["348"],"'Customers' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Auth' is assigned a value but never used.","'useEffect' is defined but never used.","'Loading' is assigned a value but never used.","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'Customerid' and 'setState'. Either include them or remove the dependency array.",["352"],"'updateQuility' is assigned a value but never used.",["353"],"'CurrentDate' is assigned a value but never used.","'Customerid' is assigned a value but never used.","'setEmail' is assigned a value but never used.",["354"],["347"],["348"],"'Component' is defined but never used.","'Menu' is defined but never used.","'username' is assigned a value but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'user_id'. Either include it or remove the dependency array.",["355"],"no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"360","fix":"364"},{"desc":"358","fix":"365"},{"desc":"366","fix":"367"},"Update the dependencies array to be: [Customerid, state.customer_list]",{"range":"368","text":"369"},"Update the dependencies array to be: [formdata, history, name, setState]",{"range":"370","text":"371"},"Update the dependencies array to be: [formdata, history, name]",{"range":"372","text":"373"},"Update the dependencies array to be: [Customerid, setState, state.customer_list]",{"range":"374","text":"375"},{"range":"376","text":"373"},{"range":"377","text":"371"},"Update the dependencies array to be: [delid, user_id]",{"range":"378","text":"379"},[872,893],"[Customerid, state.customer_list]",[1431,1441],"[formdata, history, name, setState]",[1390,1400],"[formdata, history, name]",[922,943],"[Customerid, setState, state.customer_list]",[1396,1406],[1407,1417],[927,934],"[delid, user_id]"]